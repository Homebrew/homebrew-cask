outputs:
  homebrew_gems_cache_id:
    value: ${{ steps.update_homebrew.outputs.homebrew_gems_cache_id }}
  homebrew_gems_cache_dir:
    value: ${{ steps.update_homebrew.outputs.homebrew_gems_cache_dir }}
  tap_path:
    value: ${{ steps.checkout_pr.outputs.tap_path }}
runs:
  using: composite
  steps:
    - run: |
        echo "::set-env name=HOMEBREW_COLOR::1"
        echo "::set-env name=HOMEBREW_DEVELOPER::1"
      shell: bash
    - id: update_homebrew
      run: |
        set -euo pipefail

        homebrew_repository="$(brew --repository)"

        brew update-reset "${homebrew_repository}"

        echo "::set-output name=homebrew_gems_cache_id::$(shasum -a 256 "${homebrew_repository}/Library/Homebrew/Gemfile.lock" | cut -f1 -d ' ')"
        echo "::set-output name=homebrew_gems_cache_dir::${homebrew_repository}/Library/Homebrew/vendor/bundle/ruby"
      shell: bash
    - id: checkout_pr
      run: |
        set -euo pipefail

        brew tap "${GITHUB_REPOSITORY}"

        # Get latest version of `brew cask ci` command.
        if [ "${GITHUB_REPOSITORY}" != Homebrew/homebrew-cask ]; then
          brew update-reset "$(brew --repository homebrew/cask)"
        fi

        brew update-reset "$(brew --repository "${GITHUB_REPOSITORY}")"

        tap_path="$(brew --repository "${GITHUB_REPOSITORY}")"
        echo "::set-output name=tap_path::${tap_path}"

        cd "${tap_path}"
        patch="$(mktemp)"
        curl --silent --show-error --fail --location "${PR_URL}.patch" --output "${patch}"
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        git am --whitespace=nowarn "${patch}"
        rm "${patch}"
      shell: bash
      env:
        PR_URL: ${{ github.event.pull_request._links.html.href }}
